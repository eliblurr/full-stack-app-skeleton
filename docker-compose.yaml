version: '3.7'

services:
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.client
      args:
        API_BASE_URL: "${API_BASE_URL}"
        API_BASE_PORT: "${BACKEND_PORT}"
    image: "${CONTAINER_NAME}/clients:latest"
    ports:
      - "${FRONTEND_PORT}:8092"
    networks:
      - skeleton-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.backend
    image: "${CONTAINER_NAME}/skeleton-backend:latest"
    depends_on:
      - db
    volumes:
      - ./backend/data:/app
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${DB_NAME}"
    ports:
      - "${BACKEND_PORT}:80"
    networks:
      - skeleton-network

  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${DB_NAME}"
    networks:
      - skeleton-network

  pgadmin:
    build:
      context: .
      dockerfile: Dockerfile.pgadmin
    volumes: 
      - pgdata:/var/lib/pgadmin/data
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - skeleton-network

volumes:
  dbdata:
    driver: local

  pgdata:
    driver: local

networks:
  skeleton-network:
    driver: bridge

# backend:
  #   build: /path/to/dockerfile/