
#build environment
FROM node:13.12.0-alpine as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json ./
COPY package-lock.json ./
RUN npm ci --silent
RUN npm install react-scripts@3.4.1 -g --silent
COPY . ./

#specify arguments from env to use in replace and build 
ARG API_BASE_URL
ARG API_BASE_PORT

# RUN echo $API_BASE_URL
# RUN echo $API_BASE_PORT

RUN chmod +x replace_and_build.sh && ./replace_and_build.sh

FROM nginx:1.17.8-alpine
COPY --from=build /app/build /usr/share/nginx/html
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx/nginx.conf /etc/nginx/conf.d
EXPOSE 8092
CMD ["nginx", "-g", "daemon off;"]



# CMD ["npm", "start"]

# RUN npm run build

# production environment
# FROM nginx:stable-alpine
# COPY --from=build /app/build /usr/share/nginx/html
# # new
# COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]
# stage 2 - build the final image and copy the react build files